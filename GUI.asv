function varargout = GUI(varargin)
%GUI MATLAB code file for GUI.fig
%      GUI, by itself, creates a new GUI or raises the existing
%      singleton*.
%
%      H = GUI returns the handle to a new GUI or the handle to
%      the existing singleton*.
%
%      GUI('Property','Value',...) creates a new GUI using the
%      given property value pairs. Unrecognized properties are passed via
%      varargin to GUI_OpeningFcn.  This calling syntax produces a
%      warning when there is an existing singleton*.
%
%      GUI('CALLBACK') and GUI('CALLBACK',hObject,...) call the
%      local function named CALLBACK in GUI.M with the given input
%      arguments.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES
 
% Edit the above text to modify the response to help GUI
 
% Last Modified by GUIDE v2.5 16-May-2017 13:28:09
 
% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @GUI_OpeningFcn, ...
                   'gui_OutputFcn',  @GUI_OutputFcn, ...
                   'gui_LayoutFcn',  [], ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
   gui_State.gui_Callback = str2func(varargin{1});
end
 
if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT
 
 
% --- Executes just before GUI is made visible.
function GUI_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   unrecognized PropertyName/PropertyValue pairs from the
%            command line (see VARARGIN)
 
% Choose default command line output for GUI
handles.output = hObject;
 
% Update handles structure
guidata(hObject, handles);
cd('D:\Project Micro\test\thu');
imshow('logoIU.jpg','Parent',handles.logoIU);
imshow('logoBME.jpg','Parent',handles.logoBME);
 
%Set image of close button
[a,map]=imread('close.jpg');
[r,c,d]=size(a); 
x=ceil(r/35); 
y=ceil(c/45); 
g=a(1:x:end,1:y:end,:);
g(g==255)=5.5*255;
set(handles.Close,'CData',g);
 
%Set image of reset button
[a,map]=imread('restart.jpg');
[r,c,d]=size(a); 
x=ceil(r/30); 
y=ceil(c/40); 
g=a(1:x:end,1:y:end,:);
g(g==255)=5.5*255;
set(handles.Reset,'CData',g);
 
 
% UIWAIT makes GUI wait for user response (see UIRESUME)
% uiwait(handles.figure1);
 
 
% --- Outputs from this function are returned to the command line.
function varargout = GUI_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
 
% Get default command line output from handles structure
varargout{1} = handles.output;
 
 
 
function severity_result_Callback(hObject, eventdata, handles)
% hObject    handle to severity_result (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
 
% Hints: get(hObject,'String') returns contents of severity_result as text
%        str2double(get(hObject,'String')) returns contents of severity_result as a double
 
 
% --- Executes during object creation, after setting all properties.
function severity_result_CreateFcn(hObject, eventdata, handles)
% hObject    handle to severity_result (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called
 
% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
 
 
% --- Executes on button press in startButton.
function startButton_Callback(hObject, eventdata, handles)
% hObject    handle to startButton (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
 
global PEF
global HR
global SPO2
 
if (strcmp(get(handles.startButton,'String'),'PAUSE'))
    set(handles.startButton,'String','START');
elseif (strcmp(get(handles.startButton,'String'),'START'))
    set(handles.startButton,'String','PAUSE');
end
r=1;
while r==1 
if(get(handles.startButton,'Value')==1)
%% change to new folder
Fs1=100;
Ts1=1/Fs1;
Fs2=100;
Ts2=1/Fs2;
Fs3=100;
Ts3=1/Fs3;
x1=16; % Reach from fromat ofdats PEF, '1' is just the example
x2=16; % Reach from format of data SPo2, ''
x3=16; % reach from format of data HR, ''
    cd ('D:\Project Micro\test\thu');
    %%%%%%%% PEF data%%%%%%%%%%%%%%%%%
    b1=dir('demo-micro-test-*'); %% get the current data of spo2
    b1=b1(1); %%% change 1 into lb1
    an1=b1.name;
    n1=double(an1);
    con1=n1(1:x1);%% constant part
    change1=n1(x1+1:end);
   ind1=change1(find(change1>=48 & change1<=57));
   num1=char(ind1);
   num1=str2num(num1);
   PEF=readtable(an1);
   PEF=PEF.PEF;
   %%%%SPO2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   b2=dir('demo-micro-test-*'); %% get the current data of spo2
   b2=b2(1); %%% change 1 into lb2
   an2=b2.name;
   n2=double(an2);
   con2=n1(1:x2);%% constant part
   change2=n2(x2+1:end);
   ind2=change2(find(change2>=48 & change2<=57));
   num2=char(ind2);
   num2=str2num(num2);
   SPO2=readtable(an2);
   SPO2=SPO2.SPO2; %% call cell of SPO2
   %%%%%%%%%%%%%%% HR data %%%%%%%%%%%%%%%%%
  b3=dir('demo-micro-test-*'); %% get the current data of spo2
  b3=b3(1); %%% change 1 into lb3
  an3=b3.name;
  n3=double(an3);
  con3=n3(1:x3);%% constant part
  change3=n3(x3+1:end);
  ind3=change3(find(change3>=48 & change3<=57));
  num3=char(ind3);
  num3=str2num(num3);
  HR=readtable(an3);
  HR=HR.HR; %% call cell of HR
 %%%%% finish to get the current data of SPo2  
  l1=numel(PEF);   
  l2=numel(SPO2);
  l3=numel(HR);
  a1=(1:l1)/Fs1;
  a2=(1:l2)/Fs2;
  a3=(1:l3)/Fs3;
 %%%%% create sound with the time is 1/Fs1;
%   t=0:1/10e3:1/100; % duration 4
%   rad=90*pi/180; %angle in rad of sinusoid1
%   y1=1500*sin(2*pi*150*t+rad); %sinusoid 1
%   y2=200*sin(2*pi*950*t); %sinusoid 2
%   y=y1+y2; %sum function
  ls1=0;
  ls2=0;
  ls3=0;
  dataYN={};
  dataseverity={};
  time=[];
  j=0;
%%% loop for combine all the segment files
    %% --loop 2-- %%
    while l1>=500 && l2>=500 && l3>=500 %% mow text 1
    i=250;
    %% -- loop 1--%%
    while i<=(l1-250) && i<=(l2-250) && i<=(l3-250)
        j=j+1;
        data1=PEF((i-250+1):(i+250));
        data2=SPO2((i-250+1):(i+250));
        data3=HR((i-250+1):(i+250));
    if isequal(data1>=33 & data1 <=50,ones(length(data1),1))  && isequal(data2 >92,ones(length(data1),1)) && isequal(data3>110,ones(length(data1),1))
%         sound(y);
        p1='data';
        p2='yes';
        p3='acute severe asthma';
    elseif isequal(data1 <=33,ones(length(data1),1)) && isequal(data2 <=92,ones(length(data1),1)) && isequal(data3<60,ones(length(data1),1))
%         sound(y);
        p1='data';
        p2='yes';
        p3='life threating!!';
    elseif isequal(data1>=50 & data1<=75,ones(length(data1),1)) && isequal(data2 >92,ones(length(data1),1)) && isequal(data3<110,ones(length(data1),1))
%         sound(y)
        p1='data';
        p2='yes';
        p3='moderate asthma';
    elseif isequal(data1 >=75,ones(length(data1),1)) && isequal(data2 >92,ones(length(data1),1)) && isequal(data3>60,ones(length(data1),1)) 
        p1='data';
        p2='no';
        p3='normal';
    else
        p1='connecting...';
        p2='detecting...';
        p3='detecting...';
    end
    set(handles.Status,'String',p1);
    set(handles.YN_results,'String',p2);
    set(handles.severity_result,'String',p3);
    axes(handles.PEF_plot);
    s1=a1(i-250+1:i+250); % x axis
    plot(s1,data1);
    xlim ([min(s1)-1/Fs1, max(s1)]);
    ylim ([0 100]);
    axes(handles.SpO2_plot);
    s2=a2(i-250+1:i+250); % x axis
    plot(s2,data2);
    xlim ([min(s2)-1/Fs2, max(s2)])
    ylim ([0 100]);
    axes(handles.HR_plot);
    s3=a3(i-250+1:i+250); % x axis
    plot(s3,data3);
    xlim ([min(s3)-1/Fs3, max(s3)]);
    ylim ([0 150]);
    i=i+6;
    drawnow;
    %% -- save data into text file table --- %%
    dataYN{j}=p2;
    dataseverity{j}=p3;
    time(j)=a1(i);
    T=table(dataYN,dataseverity, time);
    end
   %% --end loop 1-- %%
    %%% import new data
     %%%%%load new data PEF%%%%%%%%%%%%%
     num1=num1+1;
     var1=num2str(num1);
     last1=[con1,var1,'.txt']; %% call the name of current txt file
     PEFn=readtable(last1);
     PEF=[data1(2:end);PEFn.PEF];
     ls1=ls1+1000;
     a1=[];
     a1=[s1(2:end),(1:length(PEFn.PEF))/Fs1+ls1/Fs1];
     l1=length(PEF);
     %%%%%%load new data SPO2 %%%%%
     num2=num2+1;
     var2=num2str(num2);
     last2=[con2,var2,'.txt']; %% call the name of current txt file
     SPO2n=readtable(last2);
     SPO2=[];
     SPO2=[data2(2:end);SPO2n.SPO2]; %% call cell of SPO2
     ls2=ls2+1000;
     a2=[];
     a2=[s2(2:end),(1:length(SPO2n.SPO2))/Fs2+ls2/Fs2];
     l2=length(SPO2);
     %%%%%% load new data HR %%%%%%%
     num3=num3+1;
     var3=num2str(num3);
     last3=[con3,var3,'.txt']; %% call the name of current txt file
     HRn=readtable(last3);
     HR=[];
     HR=[data3(2:end);HRn.HR]; %% call cell of SPO2
     ls3=ls3+1000;
     a3=[];
     a3=[s3(2:end),(1:length(HRn.HR))/Fs3+ls3/Fs3];
     l3=length(HR);
    end
    %% -- end loop 2 -- %%
    %% -- save table to folder result -- %%
else
   i=i;
   num=num;
   
end
end
% while (strcmp(get(handles.startButton,'String'),'START'))
%     i=i;
%     num=num;
%     if strcmp(get(handles.startButton,'String'),'PAUSE')
%         break
%     end
% end
%% -- text save --%%
% cd ('D:\My Library\Project\Micro\Matlab\results text file');
%     f=dir('result-data-*');
% num=0;
% if length(f)~=0
%    l=length(f);
%    so1=fix(l/10);
%    so2=mod(l,10);
%    if so1 ~=0
%    select=length(1:so1)+length(0:so2)+(so1-1)*10;
%    else
%        select=l;
%    end
%    an=f(select); % the newest file name
%    an=an.name;
%    n=double(an); % change to ASCII
%    ind=n(find(n>=48 & n<=57)); % find number in n array
%    num=char(ind);
%    num=str2num(num);
% end
% num=num+1;
% namef=['result-data-',num2str(num),'.txt'];
% writetable(T,namef);
 
        
function Status_Callback(hObject, eventdata, handles)
% hObject    handle to Status (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
 
% Hints: get(hObject,'String') returns contents of Status as text
%        str2double(get(hObject,'String')) returns contents of Status as a double
 
 
% --- Executes during object creation, after setting all properties.
function Status_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Status (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called
 
% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
 
 
 
function YN_results_Callback(hObject, eventdata, handles)
% hObject    handle to YN_results (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
 
% Hints: get(hObject,'String') returns contents of YN_results as text
%        str2double(get(hObject,'String')) returns contents of YN_results as a double
 
 
% --- Executes during object creation, after setting all properties.
function YN_results_CreateFcn(hObject, eventdata, handles)
% hObject    handle to YN_results (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called
 
% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
 
 
% --- Executes on button press in Close.
function Close_Callback(hObject, eventdata, handles)
% hObject    handle to Close (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
close;
 
 
% --- Executes on button press in Reset.
function Reset_Callback(hObject, eventdata, handles)
% hObject    handle to Reset (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
 
 
 
function date_panel_Callback(hObject, eventdata, handles)
% hObject    handle to date_panel (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
 
% Hints: get(hObject,'String') returns contents of date_panel as text
%        str2double(get(hObject,'String')) returns contents of date_panel as a double
 
 
% --- Executes during object creation, after setting all properties.
function date_panel_CreateFcn(hObject, eventdata, handles)
% hObject    handle to date_panel (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called
 
% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
 
 
 
function name_panel_Callback(hObject, eventdata, handles)
% hObject    handle to name_panel (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
 
% Hints: get(hObject,'String') returns contents of name_panel as text
%        str2double(get(hObject,'String')) returns contents of name_panel as a double
 
 
% --- Executes during object creation, after setting all properties.
function name_panel_CreateFcn(hObject, eventdata, handles)
% hObject    handle to name_panel (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called
 
% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


